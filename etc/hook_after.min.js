(()=>{"use strict";const t=Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]'));t.forEach(t=>{new bootstrap.Tooltip(t)})})();const pluginCanvasBackgroundColor={id:"customCanvasBackgroundColor",beforeDraw:(t,a,e)=>{const{ctx:l,chartArea:{top:o,bottom:r,left:s,right:i,width:n,height:d},scales:{x:c,y:u}}=t;l.save();l.globalCompositeOperation="destination-over";l.fillStyle=e.color||"#99ffff";l.fillRect(s,o,n,d);l.restore()}};for(let t in objects.datasets){let a=objects.datasets[t];if(a instanceof Bar){let t=a;var ctx=document.getElementById("chart-bar-"+t.id);var myChart=new Chart(ctx,{type:"bar",data:{labels:t.labels,datasets:[{label:t.name,data:t.values,borderWidth:1,backgroundColor:PCOLORS[0],borderColor:"#FFFFFF"}]},options:{scales:{y:{title:{display:true,text:t.y_label},beginAtZero:true,grid:{color:"#FFFFFF"}},x:{title:{display:true,text:t.x_label},grid:{color:"#FFFFFF"},ticks:{maxRotation:90,minRotation:65}}},plugins:{customCanvasBackgroundColor:{color:"#E5E4EE"}}},plugins:[pluginCanvasBackgroundColor]});buildPlotDownload(myChart,t.id,fname);if(t.log_toggle){buildLogToggle(myChart,"bar-"+t.id)}}else if(a instanceof MultiBar){let e=a;var ctx=document.getElementById("chart-bar-"+e.id);var myChart=new Chart(ctx,{type:"bar",data:{labels:e.labels,datasets:Array.from(e.values.entries()).reverse().map(function([t,a]){return{label:e.names[t],data:a,borderWidth:1,backgroundColor:PCOLORS[t%PCOLORS.length],borderColor:"#FFFFFF"}})},options:{scales:{y:{title:{display:true,text:e.y_label},beginAtZero:true,grid:{color:"#FFFFFF"},stacked:false},x:{title:{display:true,text:e.x_label},grid:{color:"#FFFFFF"},ticks:{maxRotation:90,minRotation:65},stacked:true}},plugins:{customCanvasBackgroundColor:{color:"#E5E4EE"}}},plugins:[pluginCanvasBackgroundColor]});buildPlotDownload(myChart,e.id,fname);if(e.log_toggle){buildLogToggle(myChart,"bar-"+e.id)}}else if(a instanceof Heatmap){let l=a;var ctx=document.getElementById("chart-heatmap-"+l.id);const data_points=l.values.map(function(t,e){return t.map(function(t,a){return{x:e,y:a,v:t,x_label:l.x_labels[e],y_label:l.y_labels[a]}})}).flat();const data={datasets:[{label:"My Matrix",data:data_points,backgroundColor(t){const a=t.dataset.data[t.dataIndex].v;return getColor(a,0)},width:({chart:t})=>(t.chartArea||{}).width/l.x_labels.length,height:({chart:t})=>(t.chartArea||{}).height/l.y_labels.length}]};var myChart=new Chart(ctx,{type:"matrix",data:data,options:{aspectRatio:1,plugins:{legend:false,tooltip:{callbacks:{title(){return""},label(t){const a=t.dataset.data[t.dataIndex];return[a.x_label+" - ",a.y_label+":",a.v]}}},customCanvasBackgroundColor:{color:"#E5E4EE"}},scales:{x:{ticks:{stepSize:1,callback:(t,a)=>{return l.x_labels[t]}},grid:{display:false},position:"top"},y:{offset:true,ticks:{stepSize:1,callback:(t,a)=>{return l.y_labels[t]}},grid:{display:false}}}},plugins:[pluginCanvasBackgroundColor]});buildPlotDownload(myChart,l.id,fname);buildColorSlider(myChart,l.id)}}for(let a in objects.tables){let t=objects.tables[a];buildTableDownload(t,a,a+"_"+fname)}
